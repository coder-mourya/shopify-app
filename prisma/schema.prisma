generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User management
model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  shop        String   @unique // store.myshopify.com
  accessToken String // OAuth token
  email       String?
  plan        String   @default("free") // free / pro / advanced
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// badges 
model Badges {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  text            String
  color           String
  backgroundColor String
  position        String
  enabled         Boolean  @default(true)
  products        String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// banner 
model Banner {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  text            String
  backgroundColor String
  textColor       String
  position        String
  enabled         Boolean
  link            String
  fontSize        Float
  fontWeight      String
  padding         Float
  animation       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Cart {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  shop String // e.g., shop domain or shop ID from Shopify OAuth

  stickyCart StickyCartConfig
  cartDrawer CartDrawerConfig

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type StickyCartConfig {
  enabled          Boolean @default(false)
  position         String // e.g., 'bottom-right'
  style            String // e.g., 'floating'
  showProductCount Boolean
  showTotal        Boolean
  backgroundColor  String
  textColor        String
  borderRadius     Float
  animation        String
}

type CartDrawerConfig {
  enabled               Boolean @default(false)
  position              String // e.g., 'right'
  width                 Float
  showRecommendations   Boolean
  showShippingBar       Boolean
  freeShippingThreshold Float
}

// timer 
model Timer {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  endTime         DateTime
  style           String
  position        String
  backgroundColor String
  textColor       String
  fontSize        Float
  showDays        Boolean
  showHours       Boolean
  showMinutes     Boolean
  showSeconds     Boolean
  enabled         Boolean  @default(true)
  products        String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
